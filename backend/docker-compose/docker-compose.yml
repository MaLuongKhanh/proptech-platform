services:
  # Config Server
  config-server:
    build: ../config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
    networks:
      - proptech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Discovery Server
  discovery-server:
    build: ../discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URI=http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - proptech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build: ../api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URI=http://config-server:8888
      - EUREKA_URI=http://discovery-server:8761/eureka
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_APPLICATION_NAME=api-gateway
      - EUREKA_INSTANCE_PREFERIPADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=api-gateway
      # Cấu hình cho route các API
      - SPRING_CLOUD_GATEWAY_ROUTES[0].ID=listing-service-all-apis
      - SPRING_CLOUD_GATEWAY_ROUTES[0].URI=http://listing-service:8081
      - SPRING_CLOUD_GATEWAY_ROUTES[0].PREDICATES[0]=Path=/api/**
      - SPRING_CLOUD_GATEWAY_ROUTES[0].FILTERS[0]=StripPrefix=0
      # Thêm cấu hình route cho sale-service
      - SPRING_CLOUD_GATEWAY_ROUTES[1].ID=sale-service-all-apis
      - SPRING_CLOUD_GATEWAY_ROUTES[1].URI=http://sale-service:8084
      - SPRING_CLOUD_GATEWAY_ROUTES[1].PREDICATES[0]=Path=/api/**
      - SPRING_CLOUD_GATEWAY_ROUTES[1].FILTERS[0]=StripPrefix=0
      # Cấu hình để chờ Discovery Server và Config Server
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - proptech-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - proptech-network

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - proptech-network

  # Listing Service
  listing-service:
    build: ../listing-service
    container_name: listing-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URI=http://config-server:8888
      - EUREKA_URI=http://discovery-server:8761/eureka
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - proptech-network

  # Sale Service
  sale-service:
    build:
      context: ../sale-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_APPLICATION_NAME=sale-service
      - EUREKA_INSTANCE_PREFERIPADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=sale-service
      # Cloudinary configuration
      - CLOUDINARY_NAME=dllmkzuzi
      - CLOUDINARY_API_KEY=192678347621528
      - CLOUDINARY_API_SECRET=IA1rJ9X9Qv_OgVKGlD2HL2pSVkI
      # Cấu hình để chờ Discovery Server và Config Server
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
    networks:
      - proptech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    depends_on:
      - config-server
      - discovery-server
      - rabbitmq
      - mongodb

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - proptech-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - proptech-network

volumes:
  mongodb_data:
  rabbitmq_data:
  grafana_data:

networks:
  proptech-network:
    driver: bridge