1. Config Server
Tác dụng: Quản lý tập trung cấu hình cho tất cả các dịch vụ trong hệ thống microservice.
Giải thích:
Trong kiến trúc microservice, mỗi dịch vụ có thể cần các cấu hình khác nhau tùy theo môi trường (ví dụ: development, staging, production). Nếu quản lý cấu hình riêng lẻ cho từng dịch vụ, việc này sẽ phức tạp và dễ xảy ra lỗi. Config Server giải quyết vấn đề này bằng cách:
Lưu trữ tất cả cấu hình ở một nơi tập trung (như Git repository hoặc hệ thống tệp).
Cho phép các dịch vụ lấy cấu hình từ Config Server khi khởi động hoặc khi cần cập nhật.
Lợi ích:
Quản lý dễ dàng: Chỉ cần cập nhật cấu hình ở một chỗ, các dịch vụ sẽ tự động nhận được thay đổi.
Hỗ trợ nhiều môi trường: Dễ dàng chuyển đổi cấu hình giữa các môi trường mà không cần sửa mã nguồn.
Tăng tính bảo mật: Có thể thêm các biện pháp bảo vệ để chỉ các dịch vụ được phép mới truy cập cấu hình.

2. Discovery Server
Tác dụng: Giúp các dịch vụ trong hệ thống microservice tìm thấy và giao tiếp với nhau một cách động.
Giải thích:
Trong microservice, các dịch vụ có thể được triển khai linh hoạt, thay đổi địa chỉ (IP/port) hoặc tăng/giảm số lượng instance. Nếu hard-code địa chỉ của từng dịch vụ, hệ thống sẽ không thể hoạt động hiệu quả. Discovery Server (như Eureka Server) giải quyết vấn đề này bằng cách:
Cho phép các dịch vụ đăng ký (register) khi khởi động và hủy đăng ký (deregister) khi tắt.
Cung cấp khả năng tra cứu (discover) để các dịch vụ khác biết được vị trí của nhau.
Lợi ích:
Khám phá động: Các dịch vụ tự động tìm thấy nhau mà không cần cấu hình tĩnh.
Cân bằng tải: Hỗ trợ phân phối yêu cầu đến các instance khác nhau của một dịch vụ.
Khả năng phục hồi: Nếu một instance gặp sự cố, hệ thống có thể chuyển sang instance khác.

3. API Gateway
Tác dụng: Đóng vai trò là điểm vào duy nhất cho tất cả các yêu cầu từ client đến hệ thống microservice.
Giải thích:
API Gateway hoạt động như một reverse proxy, nhận tất cả các yêu cầu từ client và định tuyến chúng đến các dịch vụ phù hợp. Nó cung cấp các chức năng như:
Định tuyến yêu cầu đến các dịch vụ phù hợp
Xác thực và phân quyền
Chuyển đổi giao thức
Cân bằng tải
Giới hạn tốc độ (Rate limiting)
Lợi ích:
Bảo mật: Tập trung xử lý bảo mật tại một điểm
Đơn giản hóa client: Client chỉ cần tương tác với một endpoint
Tối ưu hóa hiệu suất: Có thể thực hiện caching và compression

4. Listing Service
Tác dụng: Quản lý thông tin về các bất động sản được đăng bán/cho thuê.
Giải thích:
Service này chịu trách nhiệm xử lý các thao tác liên quan đến danh sách bất động sản như:
Tạo, cập nhật, xóa thông tin bất động sản
Tìm kiếm và lọc bất động sản theo nhiều tiêu chí
Quản lý hình ảnh và tài liệu liên quan
Tích hợp với Cloudinary để lưu trữ hình ảnh
Lợi ích:
Quản lý dữ liệu tập trung
Tối ưu hóa hiệu suất tìm kiếm
Dễ dàng mở rộng và bảo trì

5. Payment Service
Tác dụng: Xử lý các giao dịch thanh toán và quản lý ví điện tử.
Giải thích:
Service này đảm nhiệm:
Xử lý thanh toán cho các gói dịch vụ
Quản lý ví điện tử của người dùng
Theo dõi lịch sử giao dịch
Tích hợp với các cổng thanh toán
Lợi ích:
Bảo mật thông tin thanh toán
Xử lý giao dịch đáng tin cậy
Dễ dàng mở rộng phương thức thanh toán

6. User Service
Tác dụng: Quản lý thông tin người dùng và xác thực.
Giải thích:
Service này chịu trách nhiệm:
Đăng ký và đăng nhập người dùng
Quản lý thông tin cá nhân
Phân quyền người dùng (Admin, Agent, User)
Quản lý phiên đăng nhập
Lợi ích:
Bảo mật thông tin người dùng
Quản lý quyền truy cập hiệu quả
Dễ dàng mở rộng tính năng người dùng

7. Sale Service
Tác dụng: Quản lý các giao dịch mua bán và cho thuê bất động sản.
Giải thích:
Service này xử lý:
Tạo và theo dõi các giao dịch
Quản lý trạng thái giao dịch
Tích hợp với Payment Service để xử lý thanh toán
Lưu trữ lịch sử giao dịch
Lợi ích:
Theo dõi giao dịch minh bạch
Xử lý giao dịch an toàn
Dễ dàng báo cáo và thống kê

8. Rental Service
Tác dụng: Quản lý các hoạt động cho thuê bất động sản.
Giải thích:
Service này chịu trách nhiệm:
Quản lý hợp đồng cho thuê
Theo dõi thời hạn thuê
Xử lý gia hạn hợp đồng
Quản lý thanh toán tiền thuê
Tích hợp với Payment Service để xử lý thanh toán định kỳ
Lợi ích:
Quản lý cho thuê hiệu quả
Tự động hóa quy trình thanh toán
Dễ dàng theo dõi và báo cáo

9. Monitoring Stack
Tác dụng: Giám sát hiệu suất và sức khỏe của hệ thống.
Giải thích:
Sử dụng Prometheus và Grafana để:
Thu thập metrics từ các service
Hiển thị dashboard theo dõi
Cảnh báo khi có vấn đề
Phân tích hiệu suất hệ thống
Lợi ích:
Phát hiện vấn đề sớm
Tối ưu hóa hiệu suất
Đảm bảo độ tin cậy của hệ thống

10. Message Broker (RabbitMQ)
Tác dụng: Xử lý giao tiếp bất đồng bộ giữa các service.
Giải thích:
RabbitMQ cung cấp:
Hàng đợi tin nhắn giữa các service
Xử lý bất đồng bộ
Đảm bảo tin nhắn được gửi đến đúng đích
Lợi ích:
Tăng độ tin cậy của hệ thống
Xử lý tải cao hiệu quả
Dễ dàng mở rộng

11. Database (MongoDB)
Tác dụng: Lưu trữ dữ liệu cho các service.
Giải thích:
MongoDB được sử dụng để:
Lưu trữ dữ liệu phi cấu trúc
Hỗ trợ truy vấn phức tạp
Dễ dàng mở rộng
Lợi ích:
Hiệu suất cao
Linh hoạt trong lưu trữ dữ liệu
Dễ dàng mở rộng